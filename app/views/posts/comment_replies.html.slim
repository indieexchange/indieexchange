.row.with-sitewide-padding.no-gutters.post-breadcrumb-row.more-margin
  .col-12
    .carded-content.less-padding-v
      .row
        .col-8.button-room
          .dib.post-breadcrumb = @category.title
          .dib.right-arrow >
          .dib.post-breadcrumb = @subcategory.title
          .dib.right-arrow >
          .dib.post-breadcrumb = @offering_word
          .dib.right-arrow >
          .dib.post-breadcrumb = @post.title.truncate(20)
          .dib.right-arrow >
          .dib.post-breadcrumb = @comment.body.truncate(20)
          .dib.right-arrow >
          .dib.post-breadcrumb Replies
        .col-4.text-right
          .edit-details.dib
            = link_to "BACK TO POST", post_path(@post), class: "btn btn-sm btn-primary"

.row.with-sitewide-padding.no-gutters.justify-content-center.post-reviews-row.with-post.more-margin
  .col-12.review-cols
    .carded-content
      .review-profile-picture-holder
        a href="#{user_path(@comment.author)}"
          .review-profile-picture
            - if @comment.author.has_cropped_profile_picture?
              = image_tag(rails_representation_url(@comment.author.pp_mid), class: "review-full-profile-picture-image", title: "Go to #{@comment.author.display_name_untruncated}'s profile")
            - else
              = image_tag("anonymous_user.png", class: "review-full-profile-picture-image", title: "Go to #{@comment.author.display_name_untruncated}'s profile")
      .review-info-holder
        .reviewer-name
          = @comment.author.display_name_untruncated
          span.review-date Posted on #{@comment.created_at.strftime("%b %-d, %Y")}
        - if @comment.author == current_user
          .delete.dib
            a href="#{destroy_comment_post_path(@post, @comment)}" data-method="delete" data-confirm="Really delete this comment?" = icon('fas', 'trash', class: 'delete-post-comment')
        / .report-dropdown.dropleft
          / todo: the IDs here need to take a number to make them unique! such as ID of the review.  same with labelled by.
          / todo: make them reportable
          / a id="reportMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
            = icon('fas', 'ellipsis-h', class: "report-dropdown-icon")
          / .dropdown-menu aria-labelledby="reportMenuButton"
            a.dropdown-item href="meow" Report
        .full-review = h(@comment.body).gsub(/\n/, '<br/>').html_safe
.row.with-sitewide-padding.no-gutters.justify-content-end.post-comments-row.with-post.more-margin
  .col-11
    .carded-content
      - if @comment.post_comment_replies.any?
        - @comment.post_comment_replies.each do |reply|
          .row.reply-display-row
            .col-2
              .reply-profile-picture-holder.text-center
                a href="#{user_path(reply.author)}"
                  - if reply.author.has_cropped_profile_picture?
                    .profile-picture-small = image_tag(rails_representation_url(reply.author.pp_mid), class: "profile-picture-small-image")
                  - else
                    .profile-picture-small = image_tag("anonymous_user.png", class: "profile-picture-small-image")
            .col-9
              .review-info-holder
                .reviewer-name
                  = reply.author.display_name_untruncated
                  span.review-date Posted on #{reply.created_at.strftime("%b %-d, %Y")}
                  - if reply.author == current_user
                    .delete.dib
                      a href="#{destroy_post_comment_reply_path(@post, @comment, reply)}" data-method="delete" data-confirm="Really delete this reply?" = icon('fas', 'trash', class: 'delete-post-comment-reply')
              .full-review = h(reply.body).gsub(/\n/, '<br/>').html_safe
      .add-reply-area id="add-reply-#{@comment.id}"
        .new-reply-form = form_for([@post, PostCommentReply.new], url: post_reply_path(@post, @comment, direct: true), method: :put) do |f|
          .row
            .col-2
              .new-comment-profile-picture-holder.text-center
                - if current_user.has_cropped_profile_picture?
                  .profile-picture-medium = image_tag(rails_representation_url(current_user.pp_mid), class: "profile-picture-medium-image")
                - else
                  .profile-picture-medium = image_tag("anonymous_user.png", class: "profile-picture-medium-image")
            .col-6
              .textarea-holder = f.text_area :body, rows: 5, class: "form-control new-comment-textarea", placeholder: "Write your reply here"
            .col-3.submit-holder
              .new-comment-submit-holder
                = f.submit "POST NOW", class: "btn branded-pill-button"

br
br
br
br
br
br